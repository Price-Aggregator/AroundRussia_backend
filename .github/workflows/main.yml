#name: AroundRussia workflow
#
#on:
#  push:
#    branches:
#      - main
#      - develop
#
#jobs:
#   front-tests:
#   build-front:
#     runs-on: ubuntu-latest
#     needs: front-tests
#     if: github.ref == 'refs/heads/main'
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v2
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#       - name: Login to Docker
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#       - name: Push to Docker Hub
#         uses: docker/build-push-action@v2
#         with:
#           context: frontend/
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/around-russia-frontend:latest
#   back-tests:
#     runs-on: ubuntu-latest
#     if: github.refs == 'refs/heads/develop'
#     steps:
#       - uses: action/checkout@v2
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.11
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
#           pip install -r requirements.txt
#       - name: Test with flake8
#         run: |
#           python -m flake8
#   build-back:
#     runs-on: ubuntu-latest
#     needs: back-tests
#     if: github.refs == 'refs/heads/main'
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v2
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1
#       - name: Login to Docker
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#       - name: Push to Docker Hub
#         uses: docker/build-push-action@v2
#         with:
#           context: backend/
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/around-russia-backend:latest
#   deploy:
#     runs-on: ubuntu-latest
#     needs: [build-front, build-back]
#     if: github.refs == 'refs/heads/main'
#     steps:
#       - name: executing remote ssh commands to deploy
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USER }}
#           key: ${{ secrets.SSH_KEY }}
#           passphrase: ${{ secrets.PASSPHRASE }}
#           script: |
#             cd aroundrussia-app
#             sudo docker-compose stop
#             sudo docker-compose rm -f backend frontend
#             sudo docker-compose pull backend frontend
#             rm -f .env
#             touch .env
#             echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
#             echo DB_NAME=${{ secrets.DB_NAME }} >> .env
#             echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
#             echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
#             echo DB_HOST=${{ secrets.DB_HOST }} >> .env
#             echo DB_PORT=${{ secrets.DB_PORT }} >> .env
#             echo DJANGO_KEY=${{ secrets.DJANGO_KEY }} >> .env
#             echo DEBUG=${{ secrets.DEBUG }} >> .env
#             echo HOST=${{ secrets.HOST }} >> .env
#             sudo docker-compose up -d
#             sudo docker-compose exec -T backend python manage.py migrate